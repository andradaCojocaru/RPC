/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _TEMA1_H_RPCGEN
#define _TEMA1_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define LINESIZE 50
#define SIZE_USER_ID 15
#define SIZE_RESOURCE_NAME 20

struct request_authorization {
	int status;
	char *request_token;
};
typedef struct request_authorization request_authorization;

struct approve_request_token {
	char *request_token;
	int is_signed;
};
typedef struct approve_request_token approve_request_token;

struct request_access_token_params {
	char *id;
	int is_signed;
	char *request_token;
	int is_automatic_refreshed;
};
typedef struct request_access_token_params request_access_token_params;

struct request_access_token {
	char *request_token;
	char *access_token;
	char *refresh_token;
	int ttl;
	int status;
};
typedef struct request_access_token request_access_token;

struct validate_action_params {
	int ttl;
	char *operation;
	char *resource;
	char *access_token;
};
typedef struct validate_action_params validate_action_params;

#define TEMA1_PROG 0x3123456
#define TEMA1_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define REQUEST_AUTHORIZATION 1
extern  request_authorization * request_authorization_1(char *, CLIENT *);
extern  request_authorization * request_authorization_1_svc(char *, struct svc_req *);
#define APPROVE_REQUEST_TOKEN 2
extern  approve_request_token * approve_request_token_1(char *, CLIENT *);
extern  approve_request_token * approve_request_token_1_svc(char *, struct svc_req *);
#define REQUEST_ACCESS_TOKEN 3
extern  request_access_token * request_access_token_1(request_access_token_params , CLIENT *);
extern  request_access_token * request_access_token_1_svc(request_access_token_params , struct svc_req *);
#define VALIDATE_DELEGATED_ACTION 4
extern  int * validate_delegated_action_1(validate_action_params , CLIENT *);
extern  int * validate_delegated_action_1_svc(validate_action_params , struct svc_req *);
extern int tema1_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define REQUEST_AUTHORIZATION 1
extern  request_authorization * request_authorization_1();
extern  request_authorization * request_authorization_1_svc();
#define APPROVE_REQUEST_TOKEN 2
extern  approve_request_token * approve_request_token_1();
extern  approve_request_token * approve_request_token_1_svc();
#define REQUEST_ACCESS_TOKEN 3
extern  request_access_token * request_access_token_1();
extern  request_access_token * request_access_token_1_svc();
#define VALIDATE_DELEGATED_ACTION 4
extern  int * validate_delegated_action_1();
extern  int * validate_delegated_action_1_svc();
extern int tema1_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_request_authorization (XDR *, request_authorization*);
extern  bool_t xdr_approve_request_token (XDR *, approve_request_token*);
extern  bool_t xdr_request_access_token_params (XDR *, request_access_token_params*);
extern  bool_t xdr_request_access_token (XDR *, request_access_token*);
extern  bool_t xdr_validate_action_params (XDR *, validate_action_params*);

#else /* K&R C */
extern bool_t xdr_request_authorization ();
extern bool_t xdr_approve_request_token ();
extern bool_t xdr_request_access_token_params ();
extern bool_t xdr_request_access_token ();
extern bool_t xdr_validate_action_params ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_TEMA1_H_RPCGEN */
